{"ast":null,"code":"var _jsxFileName = \"/Users/yuheikaneshita/Desktop/UNCHAIN/ETH-NFT-game/nft-game-starter-project/src/Components/Arena/index.js\",\n    _s = $RefreshSig$();\n\n// index.js\nimport React, { useEffect, useState } from \"react\";\nimport { ethers } from \"ethers\";\nimport { CONTRACT_ADDRESS, transformCharacterData } from \"../../constants\";\nimport myEpicGame from \"../../utils/MyEpicGame.json\";\nimport \"./Arena.css\";\nimport LoadingIndicator from \"../LoadingIndicator\"; // フロントエンドにNFTキャラクターを表示するため、characterNFTのメタデータを渡します。\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Arena = _ref => {\n  _s();\n\n  let {\n    characterNFT,\n    setCharacterNFT\n  } = _ref;\n  // コントラクトのデータを保有する状態変数を初期化します。\n  const [gameContract, setGameContract] = useState(null); // ボスのメタデータを保存する状態変数を初期化します。\n\n  const [boss, setBoss] = useState(null); // 攻撃の状態を保存する変数を初期化します。\n\n  const [attackState, setAttackState] = useState(\"\"); // 攻撃ダメージの表示形式を保存する変数を初期化します。\n\n  const [showToast, setShowToast] = useState(false); // NFTキャラクターがボスを攻撃する際に使用する関数を定義します。\n  // ボスを攻撃する関数を設定します。\n\n  const runAttackAction = async () => {\n    try {\n      // コントラクトが呼び出されたことを確認します。\n      if (gameContract) {\n        // attackState の状態を attacking に設定します。\n        setAttackState(\"attacking\");\n        console.log(\"Attacking boss...\"); // NFT キャラクターがボスを攻撃します。\n\n        const attackTxn = await gameContract.attackBoss(); // トランザクションがマイニングされるまで待ちます。\n\n        await attackTxn.wait();\n        console.log(\"attackTxn:\", attackTxn); // attackState の状態を hit に設定します。\n\n        setAttackState(\"hit\"); // 攻撃ダメージの表示を true に設定し（表示）、5秒後に false に設定する（非表示）\n\n        setShowToast(true);\n        setTimeout(() => {\n          setShowToast(false);\n        }, 5000);\n      }\n    } catch (error) {\n      console.error(\"Error attacking boss:\", error);\n      setAttackState(\"\");\n    }\n  }; // ページがロードされると下記が実行されます。\n\n\n  useEffect(() => {\n    // コントラクトからボスのメタデータを取得し、bossを設定する非同期関数 fetchBoss を設定します。\n    const fetchBoss = async () => {\n      const bossTxn = await gameContract.getBigBoss();\n      console.log(\"Boss:\", bossTxn);\n      setBoss(transformCharacterData(bossTxn));\n    }; // AttackCompleteイベントを受信したときに起動するコールバックメソッドを追加します。\n\n\n    const onAttackComplete = (newBossHp, newPlayerHp) => {\n      // ボスの新しいHPを取得します。\n      const bossHp = newBossHp.toNumber(); // NFT キャラクターの新しいHPを取得します。\n\n      const playerHp = newPlayerHp.toNumber();\n      console.log(`AttackComplete: Boss Hp: ${bossHp} Player Hp: ${playerHp}`); // NFT キャラクターとボスのHPを更新します。\n\n      setBoss(prevState => {\n        return { ...prevState,\n          hp: bossHp\n        };\n      });\n      setCharacterNFT(prevState => {\n        return { ...prevState,\n          hp: playerHp\n        };\n      });\n    };\n\n    if (gameContract) {\n      // コントラクトの準備ができたら、ボスのメタデータを取得します。\n      fetchBoss(); // リスナーの設定：ボスが攻撃された通知を受け取ります。\n\n      gameContract.on(\"AttackComplete\", onAttackComplete);\n    }\n\n    return () => {\n      if (gameContract) {\n        gameContract.off(\"AttackComplete\", onAttackComplete);\n      }\n    };\n  }, [gameContract]); // ページがロードされると下記が実行されます。\n\n  useEffect(() => {\n    const {\n      ethereum\n    } = window;\n\n    if (ethereum) {\n      const provider = new ethers.providers.Web3Provider(ethereum);\n      const signer = provider.getSigner();\n      const gameContract = new ethers.Contract(CONTRACT_ADDRESS, myEpicGame.abi, signer);\n      setGameContract(gameContract);\n    } else {\n      console.log(\"Ethereum object not found\");\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"arena-container\",\n    children: [boss && characterNFT && /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"toast\",\n      className: showToast ? \"show\" : \"\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"desc\",\n        children: `💥 ${boss.name} was hit for ${characterNFT.attackDamage}!`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 17\n    }, this), boss && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"boss-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: `boss-content ${attackState}`,\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: [\"\\uD83D\\uDD25 \", boss.name, \" \\uD83D\\uDD25\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"image-content\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: `https://cloudflare-ipfs.com/ipfs/${boss.imageURI}`,\n            alt: `Boss ${boss.name}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"health-bar\",\n            children: [/*#__PURE__*/_jsxDEV(\"progress\", {\n              value: boss.hp,\n              max: boss.maxHp\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 127,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: `${boss.hp} / ${boss.maxHp} HP`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 128,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"attack-container\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"cta-button\",\n          onClick: runAttackAction,\n          children: `💥 Attack ${boss.name}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 21\n      }, this), attackState === \"attacking\" && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loading-indicator\",\n        children: [/*#__PURE__*/_jsxDEV(LoadingIndicator, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Attacking \\u2694\\uFE0F\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 17\n    }, this), characterNFT && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"players-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"player-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Your Character\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"player\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"image-content\",\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              children: characterNFT.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 153,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n              src: `https://cloudflare-ipfs.com/ipfs/${characterNFT.imageURI}`,\n              alt: `Character ${characterNFT.name}`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 154,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"health-bar\",\n              children: [/*#__PURE__*/_jsxDEV(\"progress\", {\n                value: characterNFT.hp,\n                max: characterNFT.maxHp\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 159,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: `${characterNFT.hp} / ${characterNFT.maxHp} HP`\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 160,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 158,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"stats\",\n            children: /*#__PURE__*/_jsxDEV(\"h4\", {\n              children: `⚔️ Attack Damage: ${characterNFT.attackDamage}`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 164,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 108,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Arena, \"30K7Lc/ijIzASkE4LIZ33tG48Ww=\");\n\n_c = Arena;\nexport default Arena;\n\nvar _c;\n\n$RefreshReg$(_c, \"Arena\");","map":{"version":3,"names":["React","useEffect","useState","ethers","CONTRACT_ADDRESS","transformCharacterData","myEpicGame","LoadingIndicator","Arena","characterNFT","setCharacterNFT","gameContract","setGameContract","boss","setBoss","attackState","setAttackState","showToast","setShowToast","runAttackAction","console","log","attackTxn","attackBoss","wait","setTimeout","error","fetchBoss","bossTxn","getBigBoss","onAttackComplete","newBossHp","newPlayerHp","bossHp","toNumber","playerHp","prevState","hp","on","off","ethereum","window","provider","providers","Web3Provider","signer","getSigner","Contract","abi","name","attackDamage","imageURI","maxHp"],"sources":["/Users/yuheikaneshita/Desktop/UNCHAIN/ETH-NFT-game/nft-game-starter-project/src/Components/Arena/index.js"],"sourcesContent":["// index.js\nimport React, { useEffect, useState } from \"react\";\nimport { ethers } from \"ethers\";\nimport { CONTRACT_ADDRESS, transformCharacterData } from \"../../constants\";\nimport myEpicGame from \"../../utils/MyEpicGame.json\";\nimport \"./Arena.css\";\nimport LoadingIndicator from \"../LoadingIndicator\";\n\n// フロントエンドにNFTキャラクターを表示するため、characterNFTのメタデータを渡します。\nconst Arena = ({ characterNFT, setCharacterNFT }) => {\n    // コントラクトのデータを保有する状態変数を初期化します。\n    const [gameContract, setGameContract] = useState(null);\n    // ボスのメタデータを保存する状態変数を初期化します。\n    const [boss, setBoss] = useState(null);\n    // 攻撃の状態を保存する変数を初期化します。\n    const [attackState, setAttackState] = useState(\"\"); \n    // 攻撃ダメージの表示形式を保存する変数を初期化します。\n    const [showToast, setShowToast] = useState(false);\n\n    // NFTキャラクターがボスを攻撃する際に使用する関数を定義します。\n    // ボスを攻撃する関数を設定します。\n    const runAttackAction = async () => {\n        try {\n            // コントラクトが呼び出されたことを確認します。\n            if (gameContract) {\n                // attackState の状態を attacking に設定します。\n                setAttackState(\"attacking\");\n                console.log(\"Attacking boss...\");\n        \n                // NFT キャラクターがボスを攻撃します。\n                const attackTxn = await gameContract.attackBoss();\n        \n                // トランザクションがマイニングされるまで待ちます。\n                await attackTxn.wait();\n                console.log(\"attackTxn:\", attackTxn);\n        \n                // attackState の状態を hit に設定します。\n                setAttackState(\"hit\");\n\n                // 攻撃ダメージの表示を true に設定し（表示）、5秒後に false に設定する（非表示）\n                setShowToast(true);\n                setTimeout(() => {\n                    setShowToast(false);\n                }, 5000);\n            }\n        } catch (error) {\n            console.error(\"Error attacking boss:\", error);\n            setAttackState(\"\");\n        }\n    };\n\n    // ページがロードされると下記が実行されます。\n    useEffect(() => {\n        // コントラクトからボスのメタデータを取得し、bossを設定する非同期関数 fetchBoss を設定します。\n        const fetchBoss = async () => {\n            const bossTxn = await gameContract.getBigBoss();\n            console.log(\"Boss:\", bossTxn);\n            setBoss(transformCharacterData(bossTxn));\n        };\n        // AttackCompleteイベントを受信したときに起動するコールバックメソッドを追加します。\n        const onAttackComplete = (newBossHp, newPlayerHp) => {\n            // ボスの新しいHPを取得します。\n            const bossHp = newBossHp.toNumber();\n            // NFT キャラクターの新しいHPを取得します。\n            const playerHp = newPlayerHp.toNumber();\n            console.log(`AttackComplete: Boss Hp: ${bossHp} Player Hp: ${playerHp}`);\n\n            // NFT キャラクターとボスのHPを更新します。\n            setBoss((prevState) => {\n                return { ...prevState, hp: bossHp };\n            });\n            setCharacterNFT((prevState) => {\n                return { ...prevState, hp: playerHp };\n            });\n        };\n\n        if (gameContract) {\n        // コントラクトの準備ができたら、ボスのメタデータを取得します。\n            fetchBoss();\n            // リスナーの設定：ボスが攻撃された通知を受け取ります。\n            gameContract.on(\"AttackComplete\", onAttackComplete);\n        }\n\n        return () => {\n            if (gameContract) {\n                gameContract.off(\"AttackComplete\", onAttackComplete);\n            }\n        };\n    }, [gameContract]);\n\n    // ページがロードされると下記が実行されます。\n    useEffect(() => {\n        const { ethereum } = window;\n        if (ethereum) {\n        const provider = new ethers.providers.Web3Provider(ethereum);\n        const signer = provider.getSigner();\n        const gameContract = new ethers.Contract(\n            CONTRACT_ADDRESS,\n            myEpicGame.abi,\n            signer\n        );\n        setGameContract(gameContract);\n        } else {\n        console.log(\"Ethereum object not found\");\n        }\n    }, []);\n    return (\n        <div className=\"arena-container\">\n            {/* 攻撃ダメージの通知を追加します */}\n            {boss && characterNFT && (\n                <div id=\"toast\" className={showToast ? \"show\" : \"\"}>\n                    <div id=\"desc\">{`💥 ${boss.name} was hit for ${characterNFT.attackDamage}!`}</div>\n                </div>\n            )}\n            {/* ボスをレンダリングします */}\n            {boss && (\n                <div className=\"boss-container\">\n                    {/* attackState 追加します */}\n                    <div className={`boss-content ${attackState}`}>\n                        <h2>🔥 {boss.name} 🔥</h2>\n                        <div className=\"image-content\">\n                            <img \n                                src={`https://cloudflare-ipfs.com/ipfs/${boss.imageURI}`} \n                                alt={`Boss ${boss.name}`} \n                            />\n                            <div className=\"health-bar\">\n                                <progress value={boss.hp} max={boss.maxHp} />\n                                <p>{`${boss.hp} / ${boss.maxHp} HP`}</p>\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"attack-container\">\n                        <button className=\"cta-button\" onClick={runAttackAction}>\n                            {`💥 Attack ${boss.name}`}\n                        </button>\n                    </div>\n                    {/* Attack ボタンの下にローディングマークを追加します*/}\n                    {attackState === \"attacking\" && (\n                        <div className=\"loading-indicator\">\n                            <LoadingIndicator />\n                            <p>Attacking ⚔️</p>\n                        </div>\n                    )}\n                </div>\n            )}\n            {/* NFT キャラクター をレンダリングします*/}\n            {characterNFT && (\n                <div className=\"players-container\">\n                    <div className=\"player-container\">\n                        <h2>Your Character</h2>\n                        <div className=\"player\">\n                            <div className=\"image-content\">\n                                <h2>{characterNFT.name}</h2>\n                                <img\n                                    src={`https://cloudflare-ipfs.com/ipfs/${characterNFT.imageURI}`}\n                                    alt={`Character ${characterNFT.name}`}\n                                />\n                                <div className=\"health-bar\">\n                                    <progress value={characterNFT.hp} max={characterNFT.maxHp} />\n                                    <p>{`${characterNFT.hp} / ${characterNFT.maxHp} HP`}</p>\n                                </div>\n                            </div>\n                            <div className=\"stats\">\n                                <h4>{`⚔️ Attack Damage: ${characterNFT.attackDamage}`}</h4>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            )}\n        </div>\n    );\n};\nexport default Arena;"],"mappings":";;;AAAA;AACA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,MAAT,QAAuB,QAAvB;AACA,SAASC,gBAAT,EAA2BC,sBAA3B,QAAyD,iBAAzD;AACA,OAAOC,UAAP,MAAuB,6BAAvB;AACA,OAAO,aAAP;AACA,OAAOC,gBAAP,MAA6B,qBAA7B,C,CAEA;;;;AACA,MAAMC,KAAK,GAAG,QAAuC;EAAA;;EAAA,IAAtC;IAAEC,YAAF;IAAgBC;EAAhB,CAAsC;EACjD;EACA,MAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCV,QAAQ,CAAC,IAAD,CAAhD,CAFiD,CAGjD;;EACA,MAAM,CAACW,IAAD,EAAOC,OAAP,IAAkBZ,QAAQ,CAAC,IAAD,CAAhC,CAJiD,CAKjD;;EACA,MAAM,CAACa,WAAD,EAAcC,cAAd,IAAgCd,QAAQ,CAAC,EAAD,CAA9C,CANiD,CAOjD;;EACA,MAAM,CAACe,SAAD,EAAYC,YAAZ,IAA4BhB,QAAQ,CAAC,KAAD,CAA1C,CARiD,CAUjD;EACA;;EACA,MAAMiB,eAAe,GAAG,YAAY;IAChC,IAAI;MACA;MACA,IAAIR,YAAJ,EAAkB;QACd;QACAK,cAAc,CAAC,WAAD,CAAd;QACAI,OAAO,CAACC,GAAR,CAAY,mBAAZ,EAHc,CAKd;;QACA,MAAMC,SAAS,GAAG,MAAMX,YAAY,CAACY,UAAb,EAAxB,CANc,CAQd;;QACA,MAAMD,SAAS,CAACE,IAAV,EAAN;QACAJ,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0BC,SAA1B,EAVc,CAYd;;QACAN,cAAc,CAAC,KAAD,CAAd,CAbc,CAed;;QACAE,YAAY,CAAC,IAAD,CAAZ;QACAO,UAAU,CAAC,MAAM;UACbP,YAAY,CAAC,KAAD,CAAZ;QACH,CAFS,EAEP,IAFO,CAAV;MAGH;IACJ,CAvBD,CAuBE,OAAOQ,KAAP,EAAc;MACZN,OAAO,CAACM,KAAR,CAAc,uBAAd,EAAuCA,KAAvC;MACAV,cAAc,CAAC,EAAD,CAAd;IACH;EACJ,CA5BD,CAZiD,CA0CjD;;;EACAf,SAAS,CAAC,MAAM;IACZ;IACA,MAAM0B,SAAS,GAAG,YAAY;MAC1B,MAAMC,OAAO,GAAG,MAAMjB,YAAY,CAACkB,UAAb,EAAtB;MACAT,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBO,OAArB;MACAd,OAAO,CAACT,sBAAsB,CAACuB,OAAD,CAAvB,CAAP;IACH,CAJD,CAFY,CAOZ;;;IACA,MAAME,gBAAgB,GAAG,CAACC,SAAD,EAAYC,WAAZ,KAA4B;MACjD;MACA,MAAMC,MAAM,GAAGF,SAAS,CAACG,QAAV,EAAf,CAFiD,CAGjD;;MACA,MAAMC,QAAQ,GAAGH,WAAW,CAACE,QAAZ,EAAjB;MACAd,OAAO,CAACC,GAAR,CAAa,4BAA2BY,MAAO,eAAcE,QAAS,EAAtE,EALiD,CAOjD;;MACArB,OAAO,CAAEsB,SAAD,IAAe;QACnB,OAAO,EAAE,GAAGA,SAAL;UAAgBC,EAAE,EAAEJ;QAApB,CAAP;MACH,CAFM,CAAP;MAGAvB,eAAe,CAAE0B,SAAD,IAAe;QAC3B,OAAO,EAAE,GAAGA,SAAL;UAAgBC,EAAE,EAAEF;QAApB,CAAP;MACH,CAFc,CAAf;IAGH,CAdD;;IAgBA,IAAIxB,YAAJ,EAAkB;MAClB;MACIgB,SAAS,GAFK,CAGd;;MACAhB,YAAY,CAAC2B,EAAb,CAAgB,gBAAhB,EAAkCR,gBAAlC;IACH;;IAED,OAAO,MAAM;MACT,IAAInB,YAAJ,EAAkB;QACdA,YAAY,CAAC4B,GAAb,CAAiB,gBAAjB,EAAmCT,gBAAnC;MACH;IACJ,CAJD;EAKH,CApCQ,EAoCN,CAACnB,YAAD,CApCM,CAAT,CA3CiD,CAiFjD;;EACAV,SAAS,CAAC,MAAM;IACZ,MAAM;MAAEuC;IAAF,IAAeC,MAArB;;IACA,IAAID,QAAJ,EAAc;MACd,MAAME,QAAQ,GAAG,IAAIvC,MAAM,CAACwC,SAAP,CAAiBC,YAArB,CAAkCJ,QAAlC,CAAjB;MACA,MAAMK,MAAM,GAAGH,QAAQ,CAACI,SAAT,EAAf;MACA,MAAMnC,YAAY,GAAG,IAAIR,MAAM,CAAC4C,QAAX,CACjB3C,gBADiB,EAEjBE,UAAU,CAAC0C,GAFM,EAGjBH,MAHiB,CAArB;MAKAjC,eAAe,CAACD,YAAD,CAAf;IACC,CATD,MASO;MACPS,OAAO,CAACC,GAAR,CAAY,2BAAZ;IACC;EACJ,CAdQ,EAcN,EAdM,CAAT;EAeA,oBACI;IAAK,SAAS,EAAC,iBAAf;IAAA,WAEKR,IAAI,IAAIJ,YAAR,iBACG;MAAK,EAAE,EAAC,OAAR;MAAgB,SAAS,EAAEQ,SAAS,GAAG,MAAH,GAAY,EAAhD;MAAA,uBACI;QAAK,EAAE,EAAC,MAAR;QAAA,UAAiB,MAAKJ,IAAI,CAACoC,IAAK,gBAAexC,YAAY,CAACyC,YAAa;MAAzE;QAAA;QAAA;QAAA;MAAA;IADJ;MAAA;MAAA;MAAA;IAAA,QAHR,EAQKrC,IAAI,iBACD;MAAK,SAAS,EAAC,gBAAf;MAAA,wBAEI;QAAK,SAAS,EAAG,gBAAeE,WAAY,EAA5C;QAAA,wBACI;UAAA,4BAAQF,IAAI,CAACoC,IAAb;QAAA;UAAA;UAAA;UAAA;QAAA,QADJ,eAEI;UAAK,SAAS,EAAC,eAAf;UAAA,wBACI;YACI,GAAG,EAAG,oCAAmCpC,IAAI,CAACsC,QAAS,EAD3D;YAEI,GAAG,EAAG,QAAOtC,IAAI,CAACoC,IAAK;UAF3B;YAAA;YAAA;YAAA;UAAA,QADJ,eAKI;YAAK,SAAS,EAAC,YAAf;YAAA,wBACI;cAAU,KAAK,EAAEpC,IAAI,CAACwB,EAAtB;cAA0B,GAAG,EAAExB,IAAI,CAACuC;YAApC;cAAA;cAAA;cAAA;YAAA,QADJ,eAEI;cAAA,UAAK,GAAEvC,IAAI,CAACwB,EAAG,MAAKxB,IAAI,CAACuC,KAAM;YAA/B;cAAA;cAAA;cAAA;YAAA,QAFJ;UAAA;YAAA;YAAA;YAAA;UAAA,QALJ;QAAA;UAAA;UAAA;UAAA;QAAA,QAFJ;MAAA;QAAA;QAAA;QAAA;MAAA,QAFJ,eAeI;QAAK,SAAS,EAAC,kBAAf;QAAA,uBACI;UAAQ,SAAS,EAAC,YAAlB;UAA+B,OAAO,EAAEjC,eAAxC;UAAA,UACM,aAAYN,IAAI,CAACoC,IAAK;QAD5B;UAAA;UAAA;UAAA;QAAA;MADJ;QAAA;QAAA;QAAA;MAAA,QAfJ,EAqBKlC,WAAW,KAAK,WAAhB,iBACG;QAAK,SAAS,EAAC,mBAAf;QAAA,wBACI,QAAC,gBAAD;UAAA;UAAA;UAAA;QAAA,QADJ,eAEI;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAFJ;MAAA;QAAA;QAAA;QAAA;MAAA,QAtBR;IAAA;MAAA;MAAA;MAAA;IAAA,QATR,EAuCKN,YAAY,iBACT;MAAK,SAAS,EAAC,mBAAf;MAAA,uBACI;QAAK,SAAS,EAAC,kBAAf;QAAA,wBACI;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QADJ,eAEI;UAAK,SAAS,EAAC,QAAf;UAAA,wBACI;YAAK,SAAS,EAAC,eAAf;YAAA,wBACI;cAAA,UAAKA,YAAY,CAACwC;YAAlB;cAAA;cAAA;cAAA;YAAA,QADJ,eAEI;cACI,GAAG,EAAG,oCAAmCxC,YAAY,CAAC0C,QAAS,EADnE;cAEI,GAAG,EAAG,aAAY1C,YAAY,CAACwC,IAAK;YAFxC;cAAA;cAAA;cAAA;YAAA,QAFJ,eAMI;cAAK,SAAS,EAAC,YAAf;cAAA,wBACI;gBAAU,KAAK,EAAExC,YAAY,CAAC4B,EAA9B;gBAAkC,GAAG,EAAE5B,YAAY,CAAC2C;cAApD;gBAAA;gBAAA;gBAAA;cAAA,QADJ,eAEI;gBAAA,UAAK,GAAE3C,YAAY,CAAC4B,EAAG,MAAK5B,YAAY,CAAC2C,KAAM;cAA/C;gBAAA;gBAAA;gBAAA;cAAA,QAFJ;YAAA;cAAA;cAAA;cAAA;YAAA,QANJ;UAAA;YAAA;YAAA;YAAA;UAAA,QADJ,eAYI;YAAK,SAAS,EAAC,OAAf;YAAA,uBACI;cAAA,UAAM,qBAAoB3C,YAAY,CAACyC,YAAa;YAApD;cAAA;cAAA;cAAA;YAAA;UADJ;YAAA;YAAA;YAAA;UAAA,QAZJ;QAAA;UAAA;UAAA;UAAA;QAAA,QAFJ;MAAA;QAAA;QAAA;QAAA;MAAA;IADJ;MAAA;MAAA;MAAA;IAAA,QAxCR;EAAA;IAAA;IAAA;IAAA;EAAA,QADJ;AAiEH,CAlKD;;GAAM1C,K;;KAAAA,K;AAmKN,eAAeA,KAAf"},"metadata":{},"sourceType":"module"}
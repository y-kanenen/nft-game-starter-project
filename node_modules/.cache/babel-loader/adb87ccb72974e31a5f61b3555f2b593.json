{"ast":null,"code":"var _jsxFileName = \"/Users/yuheikaneshita/Desktop/UNCHAIN/ETH-NFT-game/nft-game-starter-project/src/Components/Arena/index.js\",\n    _s = $RefreshSig$();\n\n// index.js\nimport React, { useEffect, useState } from \"react\";\nimport { ethers } from \"ethers\";\nimport { CONTRACT_ADDRESS, transformCharacterData } from \"../../constants\";\nimport myEpicGame from \"../../utils/MyEpicGame.json\";\nimport \"./Arena.css\"; // フロントエンドにNFTキャラクターを表示するため、characterNFTのメタデータを渡します。\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Arena = _ref => {\n  _s();\n\n  let {\n    characterNFT\n  } = _ref;\n  // コントラクトのデータを保有する状態変数を初期化します。\n  const [gameContract, setGameContract] = useState(null); // ボスのメタデータを保存する状態変数を初期化します。\n\n  const [boss, setBoss] = useState(null); // 攻撃の状態を保存する変数を初期化します。\n\n  const [attackState, setAttackState] = useState(\"\"); // NFTキャラクターがボスを攻撃する際に使用する関数を定義します。\n  // ボスを攻撃する関数を設定します。\n\n  const runAttackAction = async () => {\n    try {\n      // コントラクトが呼び出されたことを確認します。\n      if (gameContract) {\n        // attackState の状態を attacking に設定します。\n        setAttackState(\"attacking\");\n        console.log(\"Attacking boss...\"); // NFT キャラクターがボスを攻撃します。\n\n        const attackTxn = await gameContract.attackBoss(); // トランザクションがマイニングされるまで待ちます。\n\n        await attackTxn.wait();\n        console.log(\"attackTxn:\", attackTxn); // attackState の状態を hit に設定します。\n\n        setAttackState(\"hit\");\n      }\n    } catch (error) {\n      console.error(\"Error attacking boss:\", error);\n      setAttackState(\"\");\n    }\n  }; // ページがロードされると下記が実行されます。\n\n\n  useEffect(() => {\n    // コントラクトからボスのメタデータを取得し、bossを設定する非同期関数 fetchBoss を設定します。\n    const fetchBoss = async () => {\n      const bossTxn = await gameContract.getBigBoss();\n      console.log(\"Boss:\", bossTxn);\n      setBoss(transformCharacterData(bossTxn));\n    };\n\n    if (gameContract) {\n      // コントラクトの準備ができたら、ボスのメタデータを取得します。\n      fetchBoss();\n    }\n  }, [gameContract]); // ページがロードされると下記が実行されます。\n\n  useEffect(() => {\n    const {\n      ethereum\n    } = window;\n\n    if (ethereum) {\n      const provider = new ethers.providers.Web3Provider(ethereum);\n      const signer = provider.getSigner();\n      const gameContract = new ethers.Contract(CONTRACT_ADDRESS, myEpicGame.abi, signer);\n      setGameContract(gameContract);\n    } else {\n      console.log(\"Ethereum object not found\");\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"arena-container\",\n    children: [boss && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"boss-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: `boss-content`,\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: [\"\\uD83D\\uDD25 \", boss.name, \" \\uD83D\\uDD25\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"image-content\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: boss.imageURI,\n            alt: `Boss ${boss.name}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"health-bar\",\n            children: [/*#__PURE__*/_jsxDEV(\"progress\", {\n              value: boss.hp,\n              max: boss.maxHp\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: `${boss.hp} / ${boss.maxHp} HP`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"attack-container\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"cta-button\",\n          onClick: runAttackAction,\n          children: `💥 Attack ${boss.name}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }, this), characterNFT && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"players-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"player-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Your Character\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"player\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"image-content\",\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              children: characterNFT.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n              src: characterNFT.imageURI,\n              alt: `Character ${characterNFT.name}`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"health-bar\",\n              children: [/*#__PURE__*/_jsxDEV(\"progress\", {\n                value: characterNFT.hp,\n                max: characterNFT.maxHp\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 107,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: `${characterNFT.hp} / ${characterNFT.maxHp} HP`\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 108,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"stats\",\n            children: /*#__PURE__*/_jsxDEV(\"h4\", {\n              children: `⚔️ Attack Damage: ${characterNFT.attackDamage}`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Arena, \"vPhjjoPmmPFQTej4qk4WP/WdhD4=\");\n\n_c = Arena;\nexport default Arena;\n\nvar _c;\n\n$RefreshReg$(_c, \"Arena\");","map":{"version":3,"names":["React","useEffect","useState","ethers","CONTRACT_ADDRESS","transformCharacterData","myEpicGame","Arena","characterNFT","gameContract","setGameContract","boss","setBoss","attackState","setAttackState","runAttackAction","console","log","attackTxn","attackBoss","wait","error","fetchBoss","bossTxn","getBigBoss","ethereum","window","provider","providers","Web3Provider","signer","getSigner","Contract","abi","name","imageURI","hp","maxHp","attackDamage"],"sources":["/Users/yuheikaneshita/Desktop/UNCHAIN/ETH-NFT-game/nft-game-starter-project/src/Components/Arena/index.js"],"sourcesContent":["// index.js\nimport React, { useEffect, useState } from \"react\";\nimport { ethers } from \"ethers\";\nimport { CONTRACT_ADDRESS, transformCharacterData } from \"../../constants\";\nimport myEpicGame from \"../../utils/MyEpicGame.json\";\nimport \"./Arena.css\";\n// フロントエンドにNFTキャラクターを表示するため、characterNFTのメタデータを渡します。\nconst Arena = ({ characterNFT }) => {\n    // コントラクトのデータを保有する状態変数を初期化します。\n    const [gameContract, setGameContract] = useState(null);\n    // ボスのメタデータを保存する状態変数を初期化します。\n    const [boss, setBoss] = useState(null);\n    // 攻撃の状態を保存する変数を初期化します。\n    const [attackState, setAttackState] = useState(\"\"); \n\n    // NFTキャラクターがボスを攻撃する際に使用する関数を定義します。\n    // ボスを攻撃する関数を設定します。\n    const runAttackAction = async () => {\n        try {\n        // コントラクトが呼び出されたことを確認します。\n        if (gameContract) {\n            // attackState の状態を attacking に設定します。\n            setAttackState(\"attacking\");\n            console.log(\"Attacking boss...\");\n    \n            // NFT キャラクターがボスを攻撃します。\n            const attackTxn = await gameContract.attackBoss();\n    \n            // トランザクションがマイニングされるまで待ちます。\n            await attackTxn.wait();\n            console.log(\"attackTxn:\", attackTxn);\n    \n            // attackState の状態を hit に設定します。\n            setAttackState(\"hit\");\n        }\n        } catch (error) {\n            console.error(\"Error attacking boss:\", error);\n            setAttackState(\"\");\n        }\n    };\n\n    // ページがロードされると下記が実行されます。\n    useEffect(() => {\n        // コントラクトからボスのメタデータを取得し、bossを設定する非同期関数 fetchBoss を設定します。\n        const fetchBoss = async () => {\n            const bossTxn = await gameContract.getBigBoss();\n            console.log(\"Boss:\", bossTxn);\n            setBoss(transformCharacterData(bossTxn));\n        };\n        if (gameContract) {\n        // コントラクトの準備ができたら、ボスのメタデータを取得します。\n            fetchBoss();\n        }\n    }, [gameContract]);\n\n    // ページがロードされると下記が実行されます。\n    useEffect(() => {\n        const { ethereum } = window;\n        if (ethereum) {\n        const provider = new ethers.providers.Web3Provider(ethereum);\n        const signer = provider.getSigner();\n        const gameContract = new ethers.Contract(\n            CONTRACT_ADDRESS,\n            myEpicGame.abi,\n            signer\n        );\n        setGameContract(gameContract);\n        } else {\n        console.log(\"Ethereum object not found\");\n        }\n    }, []);\n    return (\n        <div className=\"arena-container\">\n            {/* ボスをレンダリングします */}\n            {boss && (\n            <div className=\"boss-container\">\n                <div className={`boss-content`}>\n                    <h2>🔥 {boss.name} 🔥</h2>\n                    <div className=\"image-content\">\n                        <img src={boss.imageURI} alt={`Boss ${boss.name}`} />\n                        <div className=\"health-bar\">\n                            <progress value={boss.hp} max={boss.maxHp} />\n                            <p>{`${boss.hp} / ${boss.maxHp} HP`}</p>\n                        </div>\n                    </div>\n                </div>\n                <div className=\"attack-container\">\n                    <button className=\"cta-button\" onClick={runAttackAction}>\n                        {`💥 Attack ${boss.name}`}\n                    </button>\n                </div>\n            </div>\n            )}\n            {/* NFT キャラクター をレンダリングします*/}\n            {characterNFT && (\n                <div className=\"players-container\">\n                    <div className=\"player-container\">\n                        <h2>Your Character</h2>\n                        <div className=\"player\">\n                            <div className=\"image-content\">\n                                <h2>{characterNFT.name}</h2>\n                                <img\n                                    src={characterNFT.imageURI}\n                                    alt={`Character ${characterNFT.name}`}\n                                />\n                                <div className=\"health-bar\">\n                                    <progress value={characterNFT.hp} max={characterNFT.maxHp} />\n                                    <p>{`${characterNFT.hp} / ${characterNFT.maxHp} HP`}</p>\n                                </div>\n                            </div>\n                            <div className=\"stats\">\n                                <h4>{`⚔️ Attack Damage: ${characterNFT.attackDamage}`}</h4>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            )}\n        </div>\n    );\n};\nexport default Arena;"],"mappings":"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"},"metadata":{},"sourceType":"module"}